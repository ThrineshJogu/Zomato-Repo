pipeline {
    agent any
    environment{
        scannerHome = tool 'mysonar'
    }
    stages {
        stage('clean ws'){
            steps {
                cleanWs()
            }
        }
        stage('code'){
            steps{
                git branch: 'main', url: 'https://github.com/ThrineshJogu/Zomato-Repo.git'
            }
        }
        stage('CQA'){
            steps{
                withSonarQubeEnv('mysonar') {
                  sh "${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=Zomato"
                }
            }
        }
        stage('quality gates'){
            steps{
                script{
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-password'
                }
            }
        }
        stage('image'){
            steps{
                sh 'docker build -t image1 .'
            }
        }
        stage('scan'){
            steps{
                sh 'trivy image image1'
            }
        }
        stage('tag'){
            steps{
                sh 'docker tag image1 thrineshjogu/zomato:image1'
            }
        }
        stage('push'){
            steps{
                script{
                    withDockerRegistry(credentialsId: 'docker-password') {
                       sh 'docker push thrineshjogu/zomato:image1'
                    }
                }
            } 
        }
        stage('container'){
            steps{
                sh '''
                    docker run -itd --name zomato -p 3000:3000 zomato:image1
                '''
            }
        }
    }
}
